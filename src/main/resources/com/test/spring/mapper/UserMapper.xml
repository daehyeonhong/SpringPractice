<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.practice.spring.mapper.UserMapper">

  <resultMap id="BaseUserEntityResultMap" type="UserVO">
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
    <result column="ENABLED" jdbcType="CHAR" property="enabled" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_NICKNAME" jdbcType="VARCHAR" property="userNickname" />
    <result column="BIRTH_DATE" jdbcType="TIMESTAMP" property="birthDate" />
    <result column="USER_EMAIL" jdbcType="VARCHAR" property="userEmail" />
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone" />
    <result column="LICENSE" jdbcType="VARCHAR" property="license" />
    <result column="USER_REGDATE" jdbcType="TIMESTAMP" property="userRegdate" />
    <result column="USER_UPDATE" jdbcType="TIMESTAMP" property="userUpdate" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from "USER"
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.practice.spring.domain.entity.UserEntity">
    insert into "USER" (USER_ID, USER_PASSWORD, ENABLED, 
      USER_NAME, USER_NICKNAME, BIRTH_DATE, 
      USER_EMAIL, USER_PHONE, LICENSE, 
      USER_REGDATE, USER_UPDATE)
    values (#{userId,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{enabled,jdbcType=CHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, #{birthDate,jdbcType=TIMESTAMP}, 
      #{userEmail,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{license,jdbcType=VARCHAR}, 
      #{userRegdate,jdbcType=TIMESTAMP}, #{userUpdate,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.practice.spring.domain.entity.UserEntity">
    update "USER"
    set USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      ENABLED = #{enabled,jdbcType=CHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_NICKNAME = #{userNickname,jdbcType=VARCHAR},
      BIRTH_DATE = #{birthDate,jdbcType=TIMESTAMP},
      USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      LICENSE = #{license,jdbcType=VARCHAR},
      USER_REGDATE = #{userRegdate,jdbcType=TIMESTAMP},
      USER_UPDATE = #{userUpdate,jdbcType=TIMESTAMP}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseUserEntityResultMap">
    select USER_ID, USER_PASSWORD, ENABLED, USER_NAME, USER_NICKNAME, BIRTH_DATE, USER_EMAIL, 
    USER_PHONE, LICENSE, USER_REGDATE, USER_UPDATE
    from "USER"
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseUserEntityResultMap">
    select USER_ID, USER_PASSWORD, ENABLED, USER_NAME, USER_NICKNAME, BIRTH_DATE, USER_EMAIL, 
    USER_PHONE, LICENSE, USER_REGDATE, USER_UPDATE
    from "USER"
  </select>

    <select id="read" resultMap="BaseUserEntityResultMap">
        <![CDATA[
            SELECT
                U.USER_ID,USER_PASSWORD,USER_NAME,ENABLED,USER_REGDATE,USER_UPDATE,A.AUTHORITY
            FROM
                "USER" U LEFT OUTER JOIN AUTHORITIES A ON U.USER_ID=A.USER_ID
            WHERE
                U.USER_ID=#{user_id}
        ]]>
    </select>

</mapper>