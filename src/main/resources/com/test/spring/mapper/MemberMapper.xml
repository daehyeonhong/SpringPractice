<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.spring.mapper.MemberMapper">

    <resultMap id="BaseMemberEntityResultMap" type="com.test.spring.domain.entity.MemberEntity">
        <id column="MEMBER_ID" jdbcType="VARCHAR" property="memberId" />
        <result column="MEMBER_PASSWORD" jdbcType="VARCHAR" property="memberPassword" />
        <result column="MEMBER_NAME" jdbcType="VARCHAR" property="memberName" />
        <result column="MEMBER_NICKNAME" jdbcType="VARCHAR" property="memberNickname" />
        <result column="BIRTH_DATE" jdbcType="TIMESTAMP" property="birthDate" />
        <result column="MEMBER_EMAIL" jdbcType="VARCHAR" property="memberEmail" />
        <result column="MEMBER_PHONE" jdbcType="VARCHAR" property="memberPhone" />
        <result column="LICENSE" jdbcType="VARCHAR" property="license" />
        <result column="MEMBER_REGDATE" jdbcType="TIMESTAMP" property="memberRegdate" />
        <result column="MEMBER_UPDATE" jdbcType="TIMESTAMP" property="memberUpdate" />
        <result column="ENABLED" jdbcType="CHAR" property="enabled" />
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from MEMBER
        where MEMBER_ID = #{memberId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.test.spring.domain.entity.MemberEntity">
        insert into MEMBER (MEMBER_ID, MEMBER_PASSWORD, MEMBER_NAME,
        MEMBER_NICKNAME, BIRTH_DATE, MEMBER_EMAIL,
        MEMBER_PHONE, LICENSE, MEMBER_REGDATE,
        MEMBER_UPDATE, ENABLED)
        values (#{memberId,jdbcType=VARCHAR}, #{memberPassword,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR},
        #{memberNickname,jdbcType=VARCHAR}, #{birthDate,jdbcType=TIMESTAMP}, #{memberEmail,jdbcType=VARCHAR},
        #{memberPhone,jdbcType=VARCHAR}, #{license,jdbcType=VARCHAR}, #{memberRegdate,jdbcType=TIMESTAMP},
        #{memberUpdate,jdbcType=TIMESTAMP}, #{enabled,jdbcType=CHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.test.spring.domain.entity.MemberEntity">
        update MEMBER
        set MEMBER_PASSWORD = #{memberPassword,jdbcType=VARCHAR},
        MEMBER_NAME = #{memberName,jdbcType=VARCHAR},
        MEMBER_NICKNAME = #{memberNickname,jdbcType=VARCHAR},
        BIRTH_DATE = #{birthDate,jdbcType=TIMESTAMP},
        MEMBER_EMAIL = #{memberEmail,jdbcType=VARCHAR},
        MEMBER_PHONE = #{memberPhone,jdbcType=VARCHAR},
        LICENSE = #{license,jdbcType=VARCHAR},
        MEMBER_REGDATE = #{memberRegdate,jdbcType=TIMESTAMP},
        MEMBER_UPDATE = #{memberUpdate,jdbcType=TIMESTAMP},
        ENABLED = #{enabled,jdbcType=CHAR}
        where MEMBER_ID = #{memberId,jdbcType=VARCHAR}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseMemberEntityResultMap">
        select MEMBER_ID, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_NICKNAME, BIRTH_DATE, MEMBER_EMAIL,
        MEMBER_PHONE, LICENSE, MEMBER_REGDATE, MEMBER_UPDATE, ENABLED
        from MEMBER
        where MEMBER_ID = #{memberId,jdbcType=VARCHAR}
    </select>

    <select id="selectAll" resultMap="BaseMemberEntityResultMap">
        select MEMBER_ID, MEMBER_PASSWORD, MEMBER_NAME, MEMBER_NICKNAME, BIRTH_DATE, MEMBER_EMAIL,
        MEMBER_PHONE, LICENSE, MEMBER_REGDATE, MEMBER_UPDATE, ENABLED
        from MEMBER
    </select>

    <select id="read">
        SELECT USER.USER_ID, USER_PASSWORD, ENABLED, USER_REG_DATE, USER_UPDATE, AUTH
        FROM USER USER LEFT OUTER JOIN AUTHORITIES AUTH ON USER.USER_ID = AUTH.USER_ID
        WHERE USER.USER_ID = #{userId}
    </select>

</mapper>